version: '3.5'

services:
  traefik:
    image: traefik:${IMAGE_TAG:-latest}
    command:
      - "--api"
      - "--entrypoints=Name:http Address::80"
      - "--defaultentrypoints=http"
      - "--maxIdleConnsPerHost=1000"
      - "--forwardingtimeouts.dialtimeout=15s"
      - "--forwardingtimeouts.responseheadertimeout=0s"
      - "--respondingtimeouts.idletimeout=3m"
      - "--respondingtimeouts.readtimeout=2m"
      - "--respondingtimeouts.writetimeout=0s"
      - "--docker"
      - "--docker.domain=traefik"
      - "--docker.watch"
      - "--docker.swarmmode"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--metrics.prometheus.entrypoint=traefik"
      - "--sendAnonymousUsage=true"
    networks:
      - traefik-net
      - metric-net
    volumes:
      - vol:/tmp
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      mode: replicated
      replicas: 1
      labels:
        traefik.docker.network: traefik-net
        traefik.frontend.auth.basic.users: ${UI_AUTH}
        traefik.frontend.rule: Host:traefik.${PUBLIC_HOSTNAME}
        traefik.port: "8080"
        traefik.backend: traefik
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        delay: 10s
        window: 1m
      resources:
        limits:
          cpus: '2'
          memory: 128M
        reservations:
          memory: 103M

networks:
  traefik-net:
    external: true

  metric-net:
    external: true

volumes:
  vol:
    name: traefik-vol
