stages:
  - deploy

image: redmic/docker-gitlab

deploy-artifactory-dev:
  stage: deploy
  variables:
    DOCKER_DRIVER: overlay2
    DEPLOY_DIR_NAME: artifactory
    SSH_REMOTE: ${DEV_SSH_REMOTE}
    SERVICE: artifactory
    IMAGE_TAG: latest
    COMPOSE_FILE: docker-compose.${SERVICE}.tmpl.yml:docker-compose.${SERVICE}.dev.yml
  services:
    - docker:dind
  script:
    - >
      deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE}
  environment:
    name: dev/${SERVICE}
    url: https://${SERVICE}.${DEV_PUBLIC_HOSTNAME}
  only:
    - dev
  when: manual

deploy-grafana-dev:
  stage: deploy
  variables:
    DOCKER_DRIVER: overlay2
    DEPLOY_DIR_NAME: grafana
    SSH_REMOTE: ${DEV_SSH_REMOTE}
    SERVICE: grafana
    IMAGE_TAG: latest
    COMPOSE_FILE: docker-compose.${SERVICE}.tmpl.yml:docker-compose.${SERVICE}.dev.yml
  services:
    - docker:dind
  script:
    - deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE}
  environment:
    name: dev/${SERVICE}
    url: https://${SERVICE}.${DEV_PUBLIC_HOSTNAME}
  only:
    - dev
  when: manual

deploy-grafana-pro:
  stage: deploy
  variables:
    DOCKER_DRIVER: overlay2
    DEPLOY_DIR_NAME: grafana
    SSH_REMOTE: ${PRO_SSH_REMOTE}
    SERVICE: grafana
    IMAGE_TAG: latest
    COMPOSE_FILE: docker-compose.${SERVICE}.tmpl.yml:docker-compose.${SERVICE}.prod.yml
  services:
    - docker:dind
  script:
    - deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE} PUBLIC_HOSTNAME=${PRO_PUBLIC_HOSTNAME}
  environment:
    name: pro/${SERVICE}
    url: https://${SERVICE}.${PRO_PUBLIC_HOSTNAME}
  only:
    - master
  when: manual

deploy-mail-server-dev:
  stage: deploy
  variables:
    DOCKER_DRIVER: overlay2
    SSH_REMOTE: ${DEV_SSH_REMOTE}
  services:
    - docker:dind
  script:
    - create-nets.sh mail-net
    - export DEPLOY_DIR_NAME=mail/mariadb SERVICE=mariadb IMAGE_TAG=10.2
    - export COMPOSE_FILE=docker-compose.${SERVICE}.tmpl.yml:docker-compose.${SERVICE}.dev.yml
    - >
      deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE} MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      MYSQL_PASSWORD=${DB_PASSWORD}
    - export DEPLOY_DIR_NAME=mail/redis SERVICE=redis IMAGE_TAG=4.0-alpine
    - export COMPOSE_FILE=docker-compose.${SERVICE}.tmpl.yml:docker-compose.${SERVICE}.dev.yml
    - deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE}
    - export DEPLOY_DIR_NAME=mail/mailserver SERVICE=mailserver IMAGE_TAG=1.1-latest
    - export COMPOSE_FILE=docker-compose.${SERVICE}.tmpl.yml:docker-compose.${SERVICE}.dev.yml
    - >
      deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE} RSPAMD_PASSWORD=${RSPAMD_PASSWORD}
      DBPASS=${DB_PASSWORD}
  environment:
    name: dev/rspamd
    url: https://spam.${DEV_PUBLIC_HOSTNAME}
  only:
    - dev
  when: manual

deploy-mail-admin-dev:
  stage: deploy
  variables:
    DOCKER_DRIVER: overlay2
    DEPLOY_DIR_NAME: mail/postfixadmin
    SSH_REMOTE: ${DEV_SSH_REMOTE}
    SERVICE: postfixadmin
    IMAGE_TAG: latest
    COMPOSE_FILE: docker-compose.${SERVICE}.tmpl.yml:docker-compose.${SERVICE}.dev.yml
  services:
    - docker:dind
  script:
    - deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE} DBPASS=${DB_PASSWORD}
  environment:
    name: dev/${SERVICE}
    url: https://${SERVICE}.${DEV_PUBLIC_HOSTNAME}
  only:
    - dev
  when: manual

deploy-mail-client-dev:
  stage: deploy
  variables:
    DOCKER_DRIVER: overlay2
    DEPLOY_DIR_NAME: mail/rainloop
    SSH_REMOTE: ${DEV_SSH_REMOTE}
    SERVICE: rainloop
    IMAGE_TAG: latest
    COMPOSE_FILE: docker-compose.${SERVICE}.tmpl.yml:docker-compose.${SERVICE}.dev.yml
  services:
    - docker:dind
  script:
    - deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE}
  environment:
    name: dev/${SERVICE}
    url: https://webmail.${DEV_PUBLIC_HOSTNAME}
  only:
    - dev
  when: manual

deploy-pgadmin-dev:
  stage: deploy
  variables:
    DOCKER_DRIVER: overlay2
    DEPLOY_DIR_NAME: pgadmin
    SSH_REMOTE: ${DEV_SSH_REMOTE}
    SERVICE: pgadmin
    IMAGE_TAG: latest
    COMPOSE_FILE: docker-compose.${SERVICE}.tmpl.yml:docker-compose.${SERVICE}.dev.yml
  services:
    - docker:dind
  script:
    - >
      deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE} PGADMIN_SETUP_EMAIL=${PGADMIN_SETUP_EMAIL}
      PGADMIN_SETUP_PASSWORD=${PGADMIN_SETUP_PASSWORD} MAIL_USER=${MAIL_USER} MAIL_PASSWORD=${MAIL_PASSWORD}
  environment:
    name: dev/${SERVICE}
    url: https://${SERVICE}.${DEV_PUBLIC_HOSTNAME}
  only:
    - dev
  when: manual

deploy-portainer-dev:
  stage: deploy
  variables:
    DOCKER_DRIVER: overlay2
    DEPLOY_DIR_NAME: portainer
    SSH_REMOTE: ${DEV_SSH_REMOTE}
    SERVICE: portainer
    IMAGE_TAG: latest
    COMPOSE_FILE: docker-compose.${SERVICE}.tmpl.yml:docker-compose.${SERVICE}.dev.yml
  services:
    - docker:dind
  script:
    - deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE}
  environment:
    name: dev/${SERVICE}
    url: https://${SERVICE}.${DEV_PUBLIC_HOSTNAME}
  only:
    - dev
  when: manual

deploy-portainer-pro:
  stage: deploy
  variables:
    DOCKER_DRIVER: overlay2
    DEPLOY_DIR_NAME: portainer
    SSH_REMOTE: ${PRO_SSH_REMOTE}
    SERVICE: portainer
    IMAGE_TAG: latest
    COMPOSE_FILE: docker-compose.${SERVICE}.tmpl.yml:docker-compose.${SERVICE}.prod.yml
  services:
    - docker:dind
  script:
    - deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE} PUBLIC_HOSTNAME=${PRO_PUBLIC_HOSTNAME}
  environment:
    name: pro/${SERVICE}
    url: https://${SERVICE}.${PRO_PUBLIC_HOSTNAME}
  only:
    - master
  when: manual

deploy-prometheus-dev:
  stage: deploy
  variables:
    DOCKER_DRIVER: overlay2
    DEPLOY_DIR_NAME: prometheus
    SSH_REMOTE: ${DEV_SSH_REMOTE}
    SERVICE: prometheus
    IMAGE_TAG: latest
    COMPOSE_FILE: docker-compose.${SERVICE}.tmpl.yml:docker-compose.${SERVICE}.dev.yml
  services:
    - docker:dind
  script:
    - deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE}
  environment:
    name: dev/${SERVICE}
    url: https://${SERVICE}.${DEV_PUBLIC_HOSTNAME}
  only:
    - dev
  when: manual

deploy-prometheus-pro:
  stage: deploy
  variables:
    DOCKER_DRIVER: overlay2
    DEPLOY_DIR_NAME: prometheus
    SSH_REMOTE: ${PRO_SSH_REMOTE}
    SERVICE: prometheus
    IMAGE_TAG: latest
    COMPOSE_FILE: docker-compose.${SERVICE}.tmpl.yml:docker-compose.${SERVICE}.prod.yml
  services:
    - docker:dind
  script:
    - deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE} PUBLIC_HOSTNAME=${PRO_PUBLIC_HOSTNAME}
  environment:
    name: pro/${SERVICE}
    url: https://${SERVICE}.${PRO_PUBLIC_HOSTNAME}
  only:
    - master
  when: manual

deploy-traefik-pro:
  stage: deploy
  variables:
    DOCKER_DRIVER: overlay2
    DEPLOY_DIR_NAME: traefik
    SSH_REMOTE: ${PRO_SSH_REMOTE}
    SERVICE: traefik
    IMAGE_TAG: latest
    COMPOSE_FILE: docker-compose.${SERVICE}.prod.yml
  services:
    - docker:dind
  script:
    - echo "${CERT_FILE}" > deploy/certFile.cert
    - echo "${KEY_FILE}" > deploy/keyFile.key
    - create-nets.sh redmic-net traefik-net
    - >
      deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE} PUBLIC_HOSTNAME=${PRO_PUBLIC_HOSTNAME}
      UI_AUTH=${UI_AUTH}
  environment:
    name: pro/${SERVICE}
    url: https://${SERVICE}.${PRO_PUBLIC_HOSTNAME}
  only:
    - master
  when: manual
